"use strict";
/**
 * Utility functions.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAddresses = exports.timestamp = void 0;
const os = require("os");
/**
 * Get the current time.
 *
 * @returns {String} The current time in the form YYYY-mm-ddTHH:MM:SS+00:00
 */
function timestamp() {
    const date = new Date().toISOString();
    return date.replace(/\.\d{3}Z/, '+00:00');
}
exports.timestamp = timestamp;
/**
 * Get all IP addresses.
 *
 * @returns {string[]} Array of addresses.
 */
function getAddresses() {
    const addresses = new Set();
    const ifaces = os.networkInterfaces();
    Object.keys(ifaces).forEach((iface) => {
        ifaces[iface].forEach((addr) => {
            const address = addr.address.toLowerCase();
            // Filter out link-local addresses.
            if (addr.family === 'IPv6' && !address.startsWith('fe80:')) {
                addresses.add(`[${address}]`);
            }
            else if (addr.family === 'IPv4' && !address.startsWith('169.254.')) {
                addresses.add(address);
            }
        });
    });
    return Array.from(addresses).sort();
}
exports.getAddresses = getAddresses;
