/**
 * High-level Property base class implementation.
 */
import Thing = require('./thing');
import Value = require('./value');
import { PrimitiveJsonType, Link } from './types';
/**
 * A Property represents an individual state value of a thing.
 */
declare class Property<ValueType = any> {
    private thing;
    private name;
    private value;
    private metadata;
    private href;
    private hrefPrefix;
    private validate;
    /**
     * Initialize the object.
     *
     * @param {Thing} thing Thing this property belongs to
     * @param {String} name Name of the property
     * @param {Value} value Value object to hold the property value
     * @param {Object} metadata Property metadata, i.e. type, description, unit,
     *                          etc., as an object.
     */
    constructor(thing: Thing, name: string, value: Value<ValueType>, metadata: Property.PropertyMetadata);
    /**
     * Validate new property value before setting it.
     *
     * @param {*} value - New value
     * @throws Error if the property is readonly or is invalid
     */
    validateValue(value: any): asserts value is ValueType;
    /**
     * Get the property description.
     *
     * @returns {Object} Description of the property as an object.
     */
    asPropertyDescription(): Property.PropertyDescription;
    /**
     * Set the prefix of any hrefs associated with this property.
     *
     * @param {String} prefix The prefix
     */
    setHrefPrefix(prefix: string): void;
    /**
     * Get the href of this property.
     *
     * @returns {String} The href
     */
    getHref(): string;
    /**
     * Get the current property value.
     *
     * @returns {*} The current value
     */
    getValue(): ValueType;
    /**
     * Set the current value of the property.
     *
     * @param {*} value The value to set
     */
    setValue(value: ValueType): void;
    /**
     * Get the name of this property.
     *
     * @returns {String} The property name.
     */
    getName(): string;
    /**
     * Get the thing associated with this property.
     *
     * @returns {Object} The thing.
     */
    getThing(): Thing;
    /**
     * Get the metadata associated with this property
     *
     * @returns {Object} The metadata
     */
    getMetadata(): Property.PropertyMetadata;
}
declare namespace Property {
    interface PropertyMetadata {
        type?: PrimitiveJsonType;
        '@type'?: string;
        unit?: string;
        title?: string;
        description?: string;
        links?: Link[];
        enum?: any[];
        readOnly?: boolean;
        minimum?: number;
        maximum?: number;
        multipleOf?: number;
    }
    interface PropertyDescription extends PropertyMetadata {
        links: Link[];
    }
}
export = Property;
